@model IPagedList<ProjectLibrary.ObjectBussiness.UserActivity>
@using X.PagedList
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;


@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].ActivityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Action)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Details)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].LogDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ActivityId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Action)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Details)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LogDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ActivityId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ActivityId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ActivityId })
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
    Display = PagedListDisplayMode.IfNeeded,
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    LinkToPreviousPageFormat = "<",
    LinkToNextPageFormat = ">",
    PageCountAndCurrentLocationFormat = "Page {0} of {1}. Current location: {2}",
    })
</div>
