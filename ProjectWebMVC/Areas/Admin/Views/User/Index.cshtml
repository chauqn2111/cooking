@model IPagedList<ProjectLibrary.ObjectBussiness.User>
@using X.PagedList
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@{
    ViewData["Title"] = "UserManager";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .custom-table-header th {
        background-color: #012970;
        color: white;
    }

    .custom-table tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

<header class="panel-heading">
    <h2>User Manager</h2>
</header>
<div class="text-center">
    @{
        if (TempData["Message"] != null)
        {
            <div id="alertMessage" class="alert alert-warning alert-dismissible fade show" role="alert">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    }
</div>

<div class="panel-body">
    <p>
        @Html.ActionLink("Create new user", "Create", "User", null, new { @class = "btn btn-danger" })
    </p>

    <div class="text-align">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-danger">

                @TempData["Message"]
            </div>
        }
    </div>

    <div class="form-group mb-4">
        @using (Html.BeginForm("Index", "User", FormMethod.Get))
        {
            <div class="row">
                <div class="col-lg-6">
                    <input type="text" name="input" placeholder="Enter userName or Email" value="@Context.Request.Query["input"].FirstOrDefault()" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <input type="submit" class="btn btn-danger" value="Search" />
                </div>
            </div>
        }
    </div>
    <div class="form-group">
        <table class="table table-bordered custom-table">
            <thead class="custom-table-header">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model[0].UserId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].UserName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].EmailConfirmed)
                    </th>
                    <th>
                        Role
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].UserType)
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    var linkCreated = false;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @{
                                var detailsLink = Html.ActionLink(item.UserId.ToString(), "Details", "UserDetail", new { id = item.UserId }, null);
                                if (detailsLink != null)
                                {
                                    linkCreated = true;
                                    @detailsLink
                                }
                                else
                                {
                                    // Nếu không tạo được ActionLink, set linkCreated về false
                                    linkCreated = false;
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailConfirmed)
                        </td>
                        <td>
                            @if (item.RoleId == 1)
                            {
                                <span style="color: red;">Admin</span>
                            }
                            else if (item.RoleId == 2)
                            {
                                <span style="color: green;">User</span>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.UserType)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @if (item.UserType == 1)
                            {
                                <span style="color: blue">Member</span>
                            }
                            else if (item.UserType == 0)
                            {
                                <span style="color: green">Free</span>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.UserType)
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.UserId }, new { @class = "btn btn-danger" })
                            @Html.ActionLink("Details", "Details", new { id = item.UserId }, new { @class = "btn btn-danger details-link" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.UserId }, new { @class = "btn btn-danger delete-link" })
                        </td>
                    </tr>
                }
            </tbody>
            @if (!linkCreated)
            {
                <div class="alert alert-warning" role="alert">
                    <strong>Thông báo:</strong> Không tìm thấy thông tin chi tiết.
                </div>
            }
        </table>
    </div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
    Display = PagedListDisplayMode.IfNeeded,
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    LinkToPreviousPageFormat = "<",
    LinkToNextPageFormat = ">",
    PageCountAndCurrentLocationFormat = "Page {0} of {1}. Current location: {2}",
    })
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Ẩn thông báo sau 5 giây
        setTimeout(function () {
            $("#alertMessage").fadeOut("slow", function () {
                // Xoá thông báo khỏi DOM sau khi ẩn đi
                $(this).remove();
            });
        }, 5000);
    });
</script>


