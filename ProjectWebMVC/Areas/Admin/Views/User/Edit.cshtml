@model ProjectLibrary.ObjectBussiness.User

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center">Edit User</h1>

<div class="container">
    <div class="row">
        <div class="col-md-6 offset-md-3 ">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
            {
                <div class="row border rounded p-3 mb-3 bg-light">
                    <div class="col-md-6">
                        @Html.HiddenFor(model => model.UserId)
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group">
                            <label>@Html.DisplayNameFor(model => model.UserName)</label>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label>@Html.DisplayNameFor(model => model.Password)</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label>@Html.DisplayNameFor(model => model.Email)</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label>@Html.DisplayNameFor(model => model.EmailConfirmed)</label>
                            <div>
                                @Html.CheckBoxFor(model => model.EmailConfirmed, new { htmlAttributes = new { @class = "form-control" } })
                                <span asp-validation-for="EmailConfirmed" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="row">
                            <div class="form-group">
                                <label>@Html.DisplayNameFor(model => model.EmailConfirmationToken)</label>
                                @Html.EditorFor(model => model.EmailConfirmationToken, new { htmlAttributes = new { @class = "form-control" } })
                                <span asp-validation-for="EmailConfirmationToken" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label>@Html.DisplayNameFor(model => model.RoleId)</label>
                                @Html.EditorFor(model => model.RoleId, new { htmlAttributes = new { @class = "form-control" } })
                                <span asp-validation-for="RoleId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label>@Html.DisplayNameFor(model => model.Status)</label>
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label>@Html.DisplayNameFor(model => model.UserType)</label>
                                @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control" } })
                                <span asp-validation-for="UserType" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-center">
                    <div class="form-group d-inline-block mr-2">
                        <input type="submit" value="Save" class="btn btn-primary" />|
                    </div>

                    <div class="form-group d-inline-block">
                        @Html.ActionLink("Back to List", "Index", "User", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
