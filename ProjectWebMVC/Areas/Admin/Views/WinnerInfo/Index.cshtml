@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<ProjectLibrary.ObjectBussiness.WinnerInfo>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .custom-table-header th {
        background-color: #012970;
        color: white;
    }

    .custom-table tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>
<header class="panel-heading">
    <h2>WinnerInfo Manager</h2>
</header>
<div class="text-center">
    @{
        if (TempData["Message"] != null)
        {
            <div id="alertMessage" class="alert alert-warning alert-dismissible fade show" role="alert">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    }
</div>

<div class="panel-body">
    @* <p>
        @Html.ActionLink("Create new WinnerInfo","Create","WinnerInfo", null, new {@class="btn btn-danger"})
    </p> *@
    <div class="form-group mb-4">
        @using (Html.BeginForm("Index", "WinnerInfo", FormMethod.Get))
        {
            <div class="row">
                <div class="col-lg-6">
                    <input type="text" name="winnerId" placeholder="Enter winnerId" value="@Context.Request.Query["winnerId"].FirstOrDefault()" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <input type="submit" class="btn btn-danger" value="Search" />
                </div>
            </div>
        }
    </div>
    <div class="form-group">
        <table class="table table-bordered custom-table">
            <thead class="custom-table-header">
                <tr>
                    <th>
                        Id
                    </th>
                    <th>
                        ContestId
                    </th>
                    <th>
                        WinnerUserId
                    </th>
                    <th>
                        WinningDate
                    </th>
                    <th>
                        Prize
                    </th>
                    <th>
                        Vote
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    var linkCreated = false;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.WinnerId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContestId)
                        </td>
                        <td>
                            @{
                                var detailsLink = Html.ActionLink(item.WinnerUserId.ToString(), "Details", "UserDetail", new { id = item.WinnerUserId }, null);
                                if (detailsLink != null)
                                {
                                    linkCreated = true;
                                    @detailsLink
                                }
                                else
                                {
                                    // Nếu không tạo được ActionLink, set linkCreated về false
                                    linkCreated = false;
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.WinningDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Prize)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Vote)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.WinnerId }, new { @class = "btn btn-danger" })
                            @Html.ActionLink("Details", "Details", new { id = item.WinnerId }, new { @class = "btn btn-danger details-link" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.WinnerId }, new { @class = "btn btn-danger delete-link" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
    Display = PagedListDisplayMode.IfNeeded,
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    LinkToPreviousPageFormat = "<",
    LinkToNextPageFormat = ">",
    PageCountAndCurrentLocationFormat = "Page {0} of {1}. Current location: {2}",
    })
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Ẩn thông báo sau 5 giây
        setTimeout(function () {
            $("#alertMessage").fadeOut("slow", function () {
                // Xoá thông báo khỏi DOM sau khi ẩn đi
                $(this).remove();
            });
        }, 5000);
    });
</script>